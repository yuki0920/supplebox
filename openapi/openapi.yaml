openapi: 3.0.3
info:
  title: SuppleBox API Document
  version: 1.0.0
paths:
  /api/products/{product_id}:
    get:
      tags:
        - API
      summary: Get Product
      parameters:
        - $ref: '#/components/parameters/product_id'
      responses:
        200:
          description: get product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
  /api/products:
    get:
      tags:
        - API
      summary: Get and Search Products
      parameters:
        - $ref: '#/components/parameters/product_id'
      responses:
        200:
          description: get products
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    $ref: '#/components/schemas/Products'

  /api/users:
    get:
      tags:
        - API
      summary: Get Users
      parameters:
        - $ref: '#/components/parameters/page'
      responses:
        200:
          description: get users
          content:
            application/json:
              schema:
                type: object
                required:
                  - pagination
                  - users
                properties:
                  pagination:
                    type: object
                    required:
                      - next
                    properties:
                      next:
                        type: string
                  users:
                    $ref: '#/components/schemas/Users'
  /api/contacts:
    post:
      tags:
        - API
      summary: Post Contact
      requestBody:
          $ref: '#/components/requestBodies/contact'
      responses:
        200:
          description: post contact
          content:
            application/json:
              schema:
                type: object
        400:
          description: invalid request
          content:
            application/json:
              schema:
                type: object
components:
  parameters:
    product_id:
      name: product_id
      in: path
      required: true
      schema:
        type: integer
        minimum: 1
    page:
      name: page
      in: query
      schema:
        type: integer
        default: 1
        minimum: 1
  schemas:
    Product:
      type: object
      # NOTE: required は保留
      properties:
        title:
          type: string
          # NOTE: 空文字 は保留項目
          description: ''
          example: ''
        url:
          type: string
        image_url:
          type: string
        asin:
          type: string
        price:
          type: string
        brand_amazon_name:
          type: string
        official_url:
          type: string
        brand_id:
          type: string
          nullable: true
        category_id:
          type: string
          nullable: true
        created_at:
          type: string
        updated_at:
          type: string
    Users:
      type: array
      items:
        type: object
        required:
          - nickname
          - user_link
          - picture_url
        properties:
          nickname:
            type: string
          gender:
            type: string
            nullable: true
          height:
            type: string
            nullable: true
          weight:
            type: string
            nullable: true
          comment:
            type: string
            nullable: true
          # TODO: links に入れる
          user_link:
            type: string
          picture_url:
            type: string
    Products:
      type: array
      items:
        type: object
        properties:
          title:
            type: string
          image_url:
            type: string
          brand_amazon_name:
            type: string
          product_link:
            type: string
          post_count:
            type: integer
          rate:
            type: number
          likes:
            type: integer

  requestBodies:
    contact:
      description: 問い合わせに必要なパラメータ
      content:
        application/json:
          schema:
            type: object
            required:
              - contact
            properties:
              contact:
                type: object
                required:
                  - name
                  - email
                  - title
                  - content
                properties:
                  name:
                    type: string
                  email:
                    type: string
                  title:
                    type: string
                  content:
                    type: string
