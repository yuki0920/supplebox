openapi: 3.0.3
info:
  title: SuppleBox API Document
  version: 1.0.0
paths:
  /api/sessions:
    get:
      operationId: fetchCurrentUser
      summary: Get Current User
      responses:
        200:
          description: get current user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/currentUser"
    post:
      operationId: login
      summary: Login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/login"
      responses:
        200:
          description: Logged in User
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/currentUser"
    delete:
      operationId: logout
      summary: Log out
      responses:
        200:
          description: Logged out
          content:
            application/json:
              schema:
                type: object
  /api/sessions/test_user:
    post:
      operationId: loginAsTestUser
      summary: Login as test user
      responses:
        200:
          description: logedin as test user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/currentUser"
  /api/products:
    get:
      operationId: fetchProducts
      summary: Get and Search Products
      parameters:
        - in: query
          name: per
          required: true
          schema:
            type: integer
        - in: query
          name: page
          required: true
          schema:
            type: integer
        - in: query
          name: q
          description: For Product Search API
          schema:
            type: string
        - in: query
          name: user_id
          schema:
            type: integer
      responses:
        200:
          description: get products
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_pages
                  - products
                properties:
                  total_pages:
                    type: number
                  products:
                    type: array
                    items:
                      $ref: "#/components/schemas/products"

    post:
      operationId: createProduct
      summary: Create Product
      requestBody:
        description: プロテイン登録に必要なパラメーター
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createProduct"
      responses:
        200:
          description: create product
          content:
            application/json:
              schema:
                type: object
  /api/products/new:
    get:
      operationId: searchProductsFromAmazon
      summary: Search Products From Amazon
      parameters:
        - in: query
          name: keyword
          description: For Amazon Product API
          schema:
            type: string
      responses:
        200:
          description: get products
          content:
            application/json:
              schema:
                type: object
                required:
                  - products
                properties:
                  products:
                    type: array
                    items:
                      $ref: "#/components/schemas/searchProducts"
  /api/products/{id}:
    get:
      operationId: fetchProduct
      summary: Get Product
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: get product
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/product"
  /api/posts:
    get:
      operationId: fetchPosts
      summary: Get Products
      parameters:
        - in: query
          name: per
          required: true
          description: per page
          schema:
            type: integer
        - in: query
          name: page
          required: true
          description: next page
          schema:
            type: integer
        - in: query
          required: false
          name: user_id
          schema:
            type: integer
        - in: query
          required: false
          name: product_id
          schema:
            type: integer
      responses:
        200:
          description: get posts
          content:
            application/json:
              schema:
                type: object
                required:
                  - total_pages
                  - posts
                properties:
                  total_pages:
                    type: number
                  posts:
                    type: array
                    items:
                      $ref: "#/components/schemas/posts"
    post:
      operationId: createPost
      summary: Create Products
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/post"
      responses:
        200:
          description: create post
          content:
            application/json:
              schema:
                type: object
  /api/posts/{id}:
    get:
      operationId: fetchPost
      summary: Get Posts
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: get post
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/post"
    put:
      operationId: updatePost
      summary: Update Post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/post"
      responses:
        200:
          description: update post
          content:
            application/json:
              schema:
                type: object
    delete:
      operationId: deletePost
      summary: Delete Post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: delete post
          content:
            application/json:
              schema:
                type: object
  /api/contacts:
    post:
      operationId: postContact
      summary: Post Contact
      requestBody:
        description: 問い合わせに必要なパラメータ
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/contact"
      responses:
        200:
          description: post contact
          content:
            application/json:
              schema:
                type: object
        400:
          description: invalid request
          content:
            application/json:
              schema:
                type: object
  /api/products/{product_id}/like:
    post:
      operationId: likeProduct
      summary: Like Product
      parameters:
        - in: path
          name: product_id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Liked the product
          content:
            application/json:
              schema:
                type: object
    delete:
      operationId: unlikeProduct
      summary: Unlike Product
      parameters:
        - in: path
          name: product_id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Unliked the product
          content:
            application/json:
              schema:
                type: object
  /api/users:
    post:
      operationId: createUser
      summary: Create User
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/newUser"
      responses:
        200:
          description: Created user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"
  /api/users/{id}:
    get:
      operationId: fetchUser
      summary: Fetch User
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Updated user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"
    put:
      operationId: updateUser
      summary: Update User
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/editUser"
      responses:
        200:
          description: Updated user
          content:
            application/json:
              schema:
                type: object
components:
  schemas:
    currentUser:
      type: object
      required:
        - user
      properties:
        user:
          type: object
          nullable: true
          required:
            - id
            - name
          properties:
            id:
              type: number
            name:
              type: string
    products:
      type: object
      required:
        - id
        - title
        - image_url
        - brand_amazon_name
        - product_link
        - post_count
        - rate
        - likes
      properties:
        id:
          type: number
        title:
          type: string
        image_url:
          type: string
        brand_amazon_name:
          type: string
        product_link:
          type: string
        post_count:
          type: integer
        rate:
          type: number
        likes:
          type: integer
    product:
      type: object
      required:
        - product
      properties:
        product:
          type: object
          required:
            - id
            - title
            - image_url
            - url
            - brand_amazon_name
            - price
            - is_liked
          properties:
            id:
              type: number
            title:
              type: string
            image_url:
              type: string
            url:
              type: string
            brand_amazon_name:
              type: string
            price:
              type: string
            is_liked:
              type: boolean
              nullable: true
    searchProducts:
      type: object
      required:
        - id
        - title
        - image_url
        - brand_amazon_name
        - product_link
        - url
        - asin
        - price
      properties:
        id:
          type: number
          nullable: true
        title:
          type: string
        image_url:
          type: string
        brand_amazon_name:
          type: string
        product_link:
          type: string
          nullable: true
        url:
          type: string
        asin:
          type: string
        price:
          type: number
    createProduct:
      type: object
      required:
        - product
      properties:
        product:
          type: object
          required:
            - title
            - image_url
            - brand_amazon_name
            - url
            - asin
            - price
          properties:
            title:
              type: string
            image_url:
              type: string
            brand_amazon_name:
              type: string
            url:
              type: string
            asin:
              type: string
            price:
              type: number
    contact:
      type: object
      required:
        - contacts
      properties:
        contacts:
          type: object
          required:
            - name
            - email
            - title
            - content
          properties:
            name:
              type: string
            email:
              type: string
            title:
              type: string
            content:
              type: string
    posts:
      type: object
      required:
        - id
        - title
        - content
        - rate
        - is_owner
        - user
        - product
      properties:
        id:
          type: number
        title:
          type: string
        content:
          type: string
        rate:
          type: number
        picture_url:
          type: string
          nullable: true
        is_owner:
          type: boolean
        user:
          type: object
          required:
            - id
            - picture_url
            - name
            - gender
            - height
            - weight
          properties:
            id:
              type: number
            picture_url:
              type: string
            name:
              type: string
            gender:
              type: string
              nullable: true
            height:
              type: string
              nullable: true
            weight:
              type: string
              nullable: true
        product:
          type: object
          required:
            - id
            - image_url
            - title
          properties:
            id:
              type: number
            image_url:
              type: string
            title:
              type: string
    post:
      type: object
      required:
        - post
      properties:
        post:
          type: object
          required:
            - product_id
            - title
            - content
            - rate
          properties:
            product_id:
              type: number
            title:
              type: string
            content:
              type: string
            rate:
              type: number
            picture:
              type: string
              format: binary
            picture_url:
              type: string
    newUser:
      type: object
      required:
        - user
      properties:
        user:
          type: object
          required:
            - name
            - email
            - password
            - password_confirmation
          properties:
            name:
              type: string
            email:
              type: string
            password:
              type: string
            password_confirmation:
              type: string
    editUser:
      type: object
      required:
        - user
      properties:
        user:
          type: object
          required:
            - picture
            - name
            - gender
            - height
            - weight
            - comment
          properties:
            picture:
              type: string
            name:
              type: string
            gender:
              type: string
              nullable: true
            height:
              type: string
              nullable: true
            weight:
              type: string
              nullable: true
            comment:
              type: string
              nullable: true
    user:
      type: object
      required:
        - user
      properties:
        user:
          type: object
          required:
            - id
            - picture_url
            - name
            - gender
            - height
            - weight
            - comment
          properties:
            id:
              type: number
            picture_url:
              type: string
            name:
              type: string
            gender:
              type: string
              nullable: true
            height:
              type: string
              nullable: true
            weight:
              type: string
              nullable: true
            comment:
              type: string
              nullable: true
    login:
      type: object
      required:
        - session
      properties:
        user:
          type: object
          required:
            - email
            - password
          properties:
            name:
              type: string
            password:
              type: string
