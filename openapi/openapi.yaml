openapi: 3.0.3
info:
  title: SuppleBox API Document
  version: 1.0.0
paths:
  /api/sessions:
    post:
      operationId: login
      summary: Login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSessionParams"
      responses:
        200:
          description: Logged in User
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetCurrentUserResponse"
    get:
      operationId: GetCurrentUser
      summary: Get Current User
      responses:
        200:
          description: Get current user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetCurrentUserResponse"
    delete:
      operationId: deleteSession
      summary: Log out
      responses:
        200:
          description: Logged out
          content:
            application/json:
              schema:
                type: object
  /api/sessions/test_user:
    post:
      operationId: CreateSessionAsTestUser
      summary: Login as test user
      responses:
        200:
          description: logedin as test user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetCurrentUserResponse"
  /api/users:
    post:
      operationId: CreateUser
      summary: Create User
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserParams"
      responses:
        200:
          description: Created user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetUserResponse"
        400:
          description: invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/users/{id}:
    get:
      operationId: GetUser
      summary: Get User
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Putd user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetUserResponse"
        400:
          description: invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      operationId: PutUser
      summary: Put User
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PutUserParams"
      responses:
        200:
          description: Putd user
          content:
            application/json:
              schema:
                type: object
  /api/products:
    get:
      operationId: GetProducts
      summary: Get and Search Products
      parameters:
        - in: query
          name: per
          required: true
          schema:
            type: integer
        - in: query
          name: page
          required: true
          schema:
            type: integer
        - in: query
          name: q
          description: For Product Search API
          schema:
            type: string
        - in: query
          name: user_id
          schema:
            type: integer
      responses:
        200:
          description: Get products
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetProductsResponse"

    post:
      operationId: CreateProduct
      summary: Create Product
      requestBody:
        description: プロテイン登録に必要なパラメーター
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateProductParams"
      responses:
        200:
          description: Create product
          content:
            application/json:
              schema:
                type: object
        400:
          description: invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/products/new:
    get:
      operationId: SearchProductsFromAmazon
      summary: Search Products From Amazon
      parameters:
        - in: query
          name: keyword
          description: For Amazon Product API
          schema:
            type: string
      responses:
        200:
          description: Get products
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchProductsResponse"
  /api/products/{id}:
    get:
      operationId: GetProduct
      summary: Get Product
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Get product
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetProductResponse"
  /api/posts:
    get:
      operationId: GetPosts
      summary: Get Posts
      parameters:
        - in: query
          name: per
          required: true
          description: per page
          schema:
            type: integer
        - in: query
          name: page
          required: true
          description: next page
          schema:
            type: integer
        - in: query
          name: user_id
          schema:
            type: integer
        - in: query
          name: product_id
          schema:
            type: integer
      responses:
        200:
          description: Get posts
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPostsResponse"
    post:
      operationId: CreatePost
      summary: Create Products
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/CreatePostParams"
      responses:
        200:
          description: Create post
          content:
            application/json:
              schema:
                type: object
  /api/posts/{id}:
    get:
      operationId: GetPost
      summary: Get Posts
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Get post
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPostResponse"
    put:
      operationId: PutPost
      summary: Put Post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/CreatePostParams"
      responses:
        200:
          description: Put post
          content:
            application/json:
              schema:
                type: object
    delete:
      operationId: deletePost
      summary: Delete Post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: delete post
          content:
            application/json:
              schema:
                type: object
  /api/products/{product_id}/like:
    post:
      operationId: likeProduct
      summary: Like Product
      parameters:
        - in: path
          name: product_id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Liked the product
          content:
            application/json:
              schema:
                type: object
    delete:
      operationId: unlikeProduct
      summary: Unlike Product
      parameters:
        - in: path
          name: product_id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Unliked the product
          content:
            application/json:
              schema:
                type: object
  /api/contacts:
    post:
      operationId: postContact
      summary: Post Contact
      requestBody:
        description: 問い合わせに必要なパラメータ
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateContactParams"
      responses:
        200:
          description: post contact
          content:
            application/json:
              schema:
                type: object
        400:
          description: invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
components:
  schemas:
    # common
    ErrorResponse:
      type: object
      required:
        - errors
      properties:
        errors:
          type: string

    # sessions
    CreateSessionParams:
      type: object
      required:
        - session
      properties:
        session:
          $ref: "#/components/schemas/CreateSessionParamsResource"
          type: object
          required:
            - email
            - password
          properties:
            email:
              type: string
            password:
              type: string
    CreateSessionParamsResource:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string
    GetCurrentUserResponse:
      type: object
      required:
        - user
      properties:
        user:
          $ref: "#/components/schemas/GetCurrentUserResponseResource"
    GetCurrentUserResponseResource:
      type: object
      nullable: true
      required:
        - id
        - name
      properties:
        id:
          type: number
        name:
          type: string
    CreateUserParams:
      type: object
      required:
        - user
      properties:
        user:
          $ref: "#/components/schemas/CreateUserParamsResource"
    CreateUserParamsResource:
      type: object
      required:
        - name
        - email
        - password
        - password_confirmation
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
        password_confirmation:
          type: string
    GetUserResponse:
      type: object
      required:
        - user
      properties:
        user:
          $ref: "#/components/schemas/GetUserResponseResource"
    GetUserResponseResource:
      type: object
      required:
        - id
        - picture_url
        - name
        - gender
        - height
        - weight
        - comment
      properties:
        id:
          type: number
        picture_url:
          type: string
        name:
          type: string
        gender:
          type: string
          nullable: true
        height:
          type: string
          nullable: true
        weight:
          type: string
          nullable: true
        comment:
          type: string
          nullable: true
    PutUserParams:
      type: object
      required:
        - user
      properties:
        user:
          $ref: "#/components/schemas/PutUserParamsResource"
    PutUserParamsResource:
      type: object
      required:
        - picture
        - name
        - gender
        - height
        - weight
        - comment
      properties:
        picture:
          type: string
        name:
          type: string
        gender:
          type: string
          nullable: true
        height:
          type: string
          nullable: true
        weight:
          type: string
          nullable: true
        comment:
          type: string
          nullable: true

    # products
    GetProductsResponse:
      type: object
      required:
        - total_pages
        - products
      properties:
        total_pages:
          type: number
        products:
          $ref: "#/components/schemas/GetProductsResponseResource"
    GetProductsResponseResource:
      type: array
      items:
        $ref: "#/components/schemas/GetProductsResponseResourceEach"
    GetProductsResponseResourceEach:
      type: object
      required:
        - id
        - title
        - image_url
        - brand_amazon_name
        - product_link
        - post_count
        - rate
        - likes
      properties:
        id:
          type: number
        title:
          type: string
        image_url:
          type: string
        brand_amazon_name:
          type: string
        product_link:
          type: string
        post_count:
          type: integer
        rate:
          type: number
        likes:
          type: integer
    CreateProductParams:
      type: object
      required:
        - product
      properties:
        product:
          $ref: "#/components/schemas/CreateProductParamsResource"
    CreateProductParamsResource:
      type: object
      required:
        - title
        - image_url
        - brand_amazon_name
        - url
        - asin
        - price
      properties:
        title:
          type: string
        image_url:
          type: string
        brand_amazon_name:
          type: string
        url:
          type: string
        asin:
          type: string
        price:
          type: number
    SearchProductsResponse:
      type: object
      required:
        - products
      properties:
        products:
          $ref: "#/components/schemas/SearchProductsResponseResource"
    SearchProductsResponseResource:
      type: array
      items:
        $ref: "#/components/schemas/SearchProductsResponseResourceEach"
    SearchProductsResponseResourceEach:
      type: object
      required:
        - id
        - title
        - image_url
        - brand_amazon_name
        - product_link
        - url
        - asin
        - price
      properties:
        id:
          type: number
          nullable: true
        title:
          type: string
        image_url:
          type: string
        brand_amazon_name:
          type: string
        product_link:
          type: string
          nullable: true
        url:
          type: string
        asin:
          type: string
        price:
          type: number
    GetProductResponse:
      type: object
      required:
        - product
      properties:
        product:
          $ref: "#/components/schemas/GetProductResponseResource"
    GetProductResponseResource:
      type: object
      required:
        - id
        - title
        - image_url
        - url
        - brand_amazon_name
        - price
        - is_liked
      properties:
        id:
          type: number
        title:
          type: string
        image_url:
          type: string
        url:
          type: string
        brand_amazon_name:
          type: string
        price:
          type: string
        is_liked:
          type: boolean
          nullable: true

    # posts
    GetPostsResponse:
      type: object
      required:
        - total_pages
        - posts
      properties:
        total_pages:
          type: number
        posts:
          $ref: "#/components/schemas/GetPostsResponseResource"
    GetPostsResponseResource:
        type: array
        items:
          $ref: "#/components/schemas/GetPostsResponseResourceEach"
    GetPostsResponseResourceEach:
      type: object
      required:
        - id
        - title
        - content
        - rate
        - is_owner
        - user
        - product
      properties:
        id:
          type: number
        title:
          type: string
        content:
          type: string
        rate:
          type: number
        picture_url:
          type: string
          nullable: true
        is_owner:
          type: boolean
        user:
          type: object
          required:
            - id
            - picture_url
            - name
            - gender
            - height
            - weight
          properties:
            id:
              type: number
            picture_url:
              type: string
            name:
              type: string
            gender:
              type: string
              nullable: true
            height:
              type: string
              nullable: true
            weight:
              type: string
              nullable: true
        product:
          type: object
          required:
            - id
            - image_url
            - title
          properties:
            id:
              type: number
            image_url:
              type: string
            title:
              type: string
    CreatePostParams:
      type: object
      required:
        - post
      properties:
        post:
          $ref: "#/components/schemas/CreatePostParamsResource"
    CreatePostParamsResource:
      type: object
      required:
        - product_id
        - title
        - content
        - rate
      properties:
        product_id:
          type: number
        title:
          type: string
        content:
          type: string
        rate:
          type: number
        picture:
          type: string
          format: binary
        picture_url:
          type: string
    GetPostResponse:
      type: object
      required:
        - post
      properties:
        post:
          $ref: "#/components/schemas/GetPostResponseResource"
    GetPostResponseResource:
      type: object
      required:
        - product_id
        - title
        - content
        - rate
      properties:
        product_id:
          type: number
        title:
          type: string
        content:
          type: string
        rate:
          type: number
        picture:
          type: string
          format: binary
        picture_url:
          type: string

    # contacts
    CreateContactParams:
      type: object
      required:
        - contacts
      properties:
        contacts:
          $ref: "#/components/schemas/CreateContactParamsResource"
    CreateContactParamsResource:
      type: object
      required:
        - name
        - email
        - title
        - content
      properties:
        name:
          type: string
        email:
          type: string
        title:
          type: string
        content:
          type: string
